- platform: universal
  name: LG CX
  children:
      - media_player.lg_webos_smart_tv
  commands:
    turn_on:
      service: script.turn_on_tv
      data: {}
    select_sound_mode:
      service: script.change_tv_sound_output
      data: {}
    select_source:
      service: media_player.select_source
      data:
        source: "{{source}}"
      target:
        entity_id: media_player.lg_webos_smart_tv
  attributes:
    source_list: media_player.lg_webos_smart_tv|source_list
  device_class: tv
  icon: >-
      {% if states('media_player.lg_cx') == 'on' -%}
        mdi:television
      {%- else -%}
        mdi:television-off
      {%- endif %}

- platform: universal
  name: Hue Sync Box
  state_template: >-
          {% if state_attr('sensor.hue_sync_box', 'mode') == 'powersave' or is_state('input_select.hue_sync_mode', 'Standby') -%}
            off
          {%- else -%}
            {{ state_attr('sensor.hue_sync_box', 'mode') }}
          {%- endif %}
  commands:
    turn_on:
      service: script.turn_on_hue_sync_box
      data: {}
    turn_off:
      service: script.turn_off_hue_sync_box
      data: {}
    select_source:
      service: input_select.select_option
      data_template:
        entity_id: input_select.hue_sync_mode
        option: >-
          {% if source == 'Movie' %}
            Movie 
          {% elif source == 'Music' %}
            Music
          {% elif source == 'Game' %}
            Game 
          {% elif source == 'Passthrough' %}
            Passthrough
          {% else %}
            Standby 
          {% endif %}
    volume_set:
      service: input_number.set_value
      data:
        value: "{{volume_level * 200}}"
      target:
        entity_id: input_number.hue_sync_brightness
  attributes:
    source_list: input_select.hue_sync_mode|options
    source: input_select.hue_sync_mode
  device_class: receiver
  icon: >-
      {% if states('media_player.hue_sync_box') == 'powersave' -%}
        hue:sync-box
      {%- else -%}
        hue:sync-box-alt
      {%- endif %}